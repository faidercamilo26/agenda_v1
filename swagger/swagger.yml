swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /correo_electronico/:
    get:
      tags:
      - correo_electronico
      description: get CorreoElectronico
      operationId: CorreoElectronicoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CorreoElectronico'
        "404":
          description: not found resource
    post:
      tags:
      - correo_electronico
      description: create CorreoElectronico
      operationId: CorreoElectronicoController.Post
      parameters:
      - in: body
        name: body
        description: body for CorreoElectronico content
        required: true
        schema:
          $ref: '#/definitions/models.CorreoElectronico'
      responses:
        "201":
          description: '{int} models.CorreoElectronico'
        "400":
          description: the request contains incorrect syntax
  /correo_electronico/{id}:
    get:
      tags:
      - correo_electronico
      description: get CorreoElectronico by id
      operationId: CorreoElectronicoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CorreoElectronico'
        "404":
          description: not found resource
    put:
      tags:
      - correo_electronico
      description: update the CorreoElectronico
      operationId: CorreoElectronicoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CorreoElectronico content
        required: true
        schema:
          $ref: '#/definitions/models.CorreoElectronico'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CorreoElectronico'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - correo_electronico
      description: delete the CorreoElectronico
      operationId: CorreoElectronicoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /persona/:
    get:
      tags:
      - persona
      description: get Persona
      operationId: PersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "404":
          description: not found resource
    post:
      tags:
      - persona
      description: create Persona
      operationId: PersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "201":
          description: '{int} models.Persona'
        "400":
          description: the request contains incorrect syntax
  /persona/{id}:
    get:
      tags:
      - persona
      description: get Persona by id
      operationId: PersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "404":
          description: not found resource
    put:
      tags:
      - persona
      description: update the Persona
      operationId: PersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Persona content
        required: true
        schema:
          $ref: '#/definitions/models.Persona'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Persona'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - persona
      description: delete the Persona
      operationId: PersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /telefono/:
    get:
      tags:
      - telefono
      description: get Telefono
      operationId: TelefonoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Telefono'
        "404":
          description: not found resource
    post:
      tags:
      - telefono
      description: create Telefono
      operationId: TelefonoController.Post
      parameters:
      - in: body
        name: body
        description: body for Telefono content
        required: true
        schema:
          $ref: '#/definitions/models.Telefono'
      responses:
        "201":
          description: '{int} models.Telefono'
        "400":
          description: the request contains incorrect syntax
  /telefono/{id}:
    get:
      tags:
      - telefono
      description: get Telefono by id
      operationId: TelefonoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Telefono'
        "404":
          description: not found resource
    put:
      tags:
      - telefono
      description: update the Telefono
      operationId: TelefonoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Telefono content
        required: true
        schema:
          $ref: '#/definitions/models.Telefono'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Telefono'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - telefono
      description: delete the Telefono
      operationId: TelefonoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.CorreoElectronico:
    title: CorreoElectronico
    type: object
    properties:
      Activo:
        type: boolean
      Correo:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      PersonaId:
        $ref: '#/definitions/models.Persona'
  models.Persona:
    title: Persona
    type: object
    properties:
      Activo:
        type: boolean
      Direccion:
        type: string
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      NombreCompleto:
        type: string
      NumeroDocumento:
        type: string
  models.Telefono:
    title: Telefono
    type: object
    properties:
      Activo:
        type: boolean
      FechaCreacion:
        type: string
      FechaModificacion:
        type: string
      Id:
        type: integer
        format: int64
      NumeroTelefono:
        type: string
      PersonaId:
        $ref: '#/definitions/models.Persona'
tags:
- name: persona
  description: |
    PersonaController operations for Persona
- name: telefono
  description: |
    TelefonoController operations for Telefono
- name: correo_electronico
  description: |
    CorreoElectronicoController operations for CorreoElectronico
